# CA and Server Cert:

openssl genrsa 2048 > ca-key.pem

openssl req -new -x509 -nodes -days 3650 -key ca-key.pem -out ca-cert.pem -subj '/C=CA/ST=ON/L=Toronto/O=RedHat/CN=RedHat/emailAddress=szobair@redhat.com'
openssl req -newkey rsa:2048 -days 3650 -nodes -keyout server-key.pem -out server-req.pem -subj '/C=CA/ST=ON/L=Toronto/O=RedHat/CN=RedHat/emailAddress=szobair@redhat.com'
openssl rsa -in server-key.pem -out server-key.pem

openssl x509 -req -in server-req.pem -days 3650 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 -out server-cert.pem

--------------
# DB client Cert:

openssl req -newkey rsa:2048 -days 3650 -nodes -keyout client-key.pem -out client-req.pem -subj '/C=CA/ST=ON/L=Toronto/O=RedHat/CN=shah'
openssl rsa -in client-key.pem -out client-key.pem
openssl x509 -req -in client-req.pem -days 3650 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 -out client-cert.pem
openssl pkcs8 -topk8 -inform PEM -outform DER -in client-key.pem -out client-key.pk8 -nocrypt
---------------

# keystore and truststore:

cat server-cert.pem ca-cert.pem client-cert.pem > bundle.pem
openssl pkcs12 -export -inkey client-key.pem -in client-cert.pem -out client.packet

keytool -importkeystore -deststorepass changeit -destkeypass changeit -destkeystore mykeystore.jks -srckeystore client.packet -srcstoretype PKCS12 -srcstorepass 1234 -alias 1
echo yes | keytool -importcert -alias postgresCA -trustcacerts -file ca-cert.pem -keystore mykeystore.jks -storepass changeit

keytool -v -list -keystore mykeystore.jks -storepass changeit


-------
#All Files:

bundle.pem  ca-cert.pem  ca.crt  client-cert.pem  client-key.pem  client-key.pk8  client.packet  mykeystore.jks
